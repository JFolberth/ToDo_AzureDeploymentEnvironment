trigger:
  branches:
    include:
    - main
pool:
  vmImage: 'ubuntu-latest'
stages:
- stage: adecosmosapp2_build
  variables:
  - name: solutionPath
    value: $(Build.SourcesDirectory)//
  jobs:
  - job: Publish_infrastructure
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact infrastructure '
      inputs:
        targetPath: infrastructure
        artifact: infrastructure
        properties: ''
  - job: Publish_tests
    steps:
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact tests '
      inputs:
        targetPath: tests
        artifact: tests
        properties: ''
  - job: whatif_adecosmosapp2_dev2_eus
    steps:
    - task: AzureCLI@2
      displayName: validate bicep
      inputs:
        azureSubscription: AzureDevExtServiceConnection
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'az deployment group validate --resource-group <ResourceGroupName> --name azureADOCLIDeployment --template-file infrastructure/main.bicep --parameters infrastructure/parameters/dev2.eus.parameters.json '
    - task: AzureCLI@2
      displayName: what-if bicep
      inputs:
        azureSubscription: AzureDevExtServiceConnection
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: az deployment group what-if --resource-group <ResourceGroupName> --name azureADOCLIDeployment --template-file infrastructure/main.bicep --parameters infrastructure/parameters/dev2.eus.parameters.json --out yamlc
  - job: build_publish_todo
    steps:
    - task: UseDotNet@2
      displayName: Use .NET SDK v
      inputs:
        packageType: 'sdk'
        version: ''
        includePreviewVersions: true
    - task: NuGetAuthenticate@0
      displayName: 'NuGet Authenticate'
    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        projects: $(Build.SourcesDirectory)/src/todo/**/*.csproj
        arguments: --configuration Release
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: publish
        publishWebProjects: True
        projects: $(Build.SourcesDirectory)/src/todo/**/*.csproj
        arguments: '--configuration Release --output drop/todo '
        zipAfterPublish: true
    - task: PublishPipelineArtifact@1
      displayName: 'Publish Pipeline Artifact todo '
      inputs:
        targetPath: drop/todo
        artifact: todo
        properties: ''
- stage: adecosmosapp2_ade_build
  jobs:
  - job: adecosmosapp2_eus_create_ade
    dependsOn: []
    steps:
    - task: AzureCLI@2
      displayName: Deploy ADE Environment
      inputs:
        azureSubscription: AzureDevExtServiceConnection
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'az devcenter dev environment create --dev-center-name <DevCenterName> --project-name <DevCenterProjectName> --catalog-name <DevCenterCatalogName> --environment-definition-name <EnvironmentDefinitionName> --environment-type <DevCenterProjectEnvironmentTypeName> --name <DeploymentEnvironmentInstanceToCreateName> --parameters infrastructure/parameters/ade.eus.parameters.json '
  - deployment: adecosmosapp2_app_cicd_eus
    environment:
      name: cicd
    dependsOn:
    - adecosmosapp2_eus_create_ade
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: <AzureServiceConnectionName>
              appType: webAppLinux
              WebAppName: <WebAppNameCreatedByADE>
              packageForLinux: $(Pipeline.Workspace)/todo/*.zip
  - deployment: run_azure_load_test_cicd_eus
    environment:
      name: cicd_loadtest
    dependsOn:
    - adecosmosapp2_app_cicd_eus
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureLoadTest@1
            inputs:
              azureSubscription: <AzureServiceConnectionName>
              loadTestConfigFile: $(Pipeline.Workspace)/tests/SampleApp.yaml
              resourceGroup: <LoadTestingResourceGroupName>
              loadTestResource: <LoadTestingResourceName>
              secretsJSONObject: ''
              secrets: ''
              env: ' [ { "name": "webapp", "value": "<FullURLOfADEWebApp>" } ]'
  - job: adecosmosapp2_eus_delete_ade
    dependsOn:
    - run_azure_load_test_cicd_eus
    condition: always()
    steps:
    - task: AzureCLI@2
      displayName: Destroy ADE Environment
      inputs:
        azureSubscription: <AzureServiceConnectionName>
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'az devcenter dev environment delete --dev-center <DevCenterName> --project-name <DevCenterProjectName> --name <DeploymentEnvironmentInstanceToCreateName> --yes  '