# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: 0.2.0
########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
    # Creates a new Dev Drive
    ### -------------------------------------
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
      settings:
        DiskId: '0'
        DiskIdType: 'Number'
        DriveLetter: 'Z'
        FSLabel: 'Dev Drive 1'
        DevDrive: true
        AllowDestructive: true
        FSFormat: 'ReFS'
        Size: '50Gb'
    ### Install Git
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: git
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.Git
    ### Configure Git to use Default WAM account
    ### -------------------------------------
    - resource: PSDscResources/Script
      dependsOn:
        - git
      directives:
        description: Configure Git to use Default WAM account
      settings:
        Script: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
          SET GCM_MSAUTH_USEDEFAULTACCOUNT="true"
          git config --global credential.msauthUseDefaultAccount true
        GetScript: return $false
        TestScript: return $false
    ### Install Azd
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: azd
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.Azd
    ### Install VSCode
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: vscode
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.Microsoft.VisualStudioCode
    - resource: PSDscResources/Script
      dependsOn:
        - vscode
      directives:
        description: Configure VS Code with Azure Extensions
      settings:
        Script: |
          New-Item -ItemType Directory -Path "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions"
          Invoke-WebRequest -Uri "https://github.gallery.vsassets.io/_apis/public/gallery/publisher/github/extension/copilot/1.265.1359/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\github.vsix"
          Invoke-WebRequest -Uri "https://github.gallery.vsassets.io/_apis/public/gallery/publisher/github/extension/copilot-chat/0.24.202412120/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\copilot-chat.vsix"
          Invoke-WebRequest -Uri "https://ms-azuretools.gallery.vsassets.io/_apis/public/gallery/publisher/ms-azuretools/extension/azure-dev/0.8.4/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\azure-dev.vsix"
          Invoke-WebRequest -Uri "https://ms-azuretools.gallery.vsassets.io/_apis/public/gallery/publisher/ms-azuretools/extension/vscode-docker/1.29.4/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\azure-docker.vsix"
          Invoke-WebRequest -Uri "https://ms-dotnettools.gallery.vsassets.io/_apis/public/gallery/publisher/ms-dotnettools/extension/csdevkit/1.16.6/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\csdevkit.vsix"
          Invoke-WebRequest -Uri "https://ms-vscode.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode/extension/vscode-node-azure-pack/1.3.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\vscode-node-azure-pack.vsix"
          Invoke-WebRequest -Uri "https://ms-azuretools.gallery.vsassets.io/_apis/public/gallery/publisher/ms-azuretools/extension/vscode-azure-github-copilot/0.3.97/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\vscode-azure-github-copilot.vsix"
          Invoke-WebRequest -Uri "https://ms-vscode-remote.gallery.vsassets.io/_apis/public/gallery/publisher/ms-vscode-remote/extension/remote-containers/0.394.0/assetbyname/Microsoft.VisualStudio.Services.VSIXPackage" -OutFile "C:\Program` Files`\Microsoft` VS` `Code\bootstrap\extensions\remote-containers.vsix"
        GetScript: return $false
        TestScript: return $false