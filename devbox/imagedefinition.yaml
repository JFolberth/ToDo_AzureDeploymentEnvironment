# NOTE: As of 1/20/2025, a bug prevents the use of inbuilt tasks with the ~ syntax for building your image into an image definition. 
# A bugfix is rolling out, and this issue will be resolved by 1/27/2024. 
# In the mean time, you can still use these image definitions with inbuilt tasks on a pool directly without building an image.

$schema: "1.0"
name: "frontend-bicep"
tasks:

- name: ~/winget
  parameters:
    downloadUrl: 'https://raw.githubusercontent.com/JFolberth/ToDo_AzureDeploymentEnvironment/refs/heads/main/devbox/config.yaml'

- name: choco
  description: install dotnetcore runtime
  parameters:
    package: dotnetcore-runtime.install

- name: choco
  description: install dotnetcore 
  parameters:
    package: dotnetcore
- name: git-clone
  description: Clone this repository into C:\Workspaces
  parameters:
    repositoryUrl: https://github.com/JFolberth/ToDo_AzureDeploymentEnvironment
    directory: Z:\repos
userTasks:
  - resource: PSDscResources/Script
    dependsOn:
      - git
    directives:
      description: Configure Git to use Default WAM account
    settings:
      SetScript: |
        $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
        SET GCM_MSAUTH_USEDEFAULTACCOUNT="true"
        git config --global credential.msauthUseDefaultAccount true
      GetScript: return $false
      TestScript: return $false
  - name: ~/powershell
    parameters:
      command: |
        $env:Path = [System.Environment]::GetEnvironmentVariable('Path','Machine') + ';' + [System.Environment]::GetEnvironmentVariable('Path','User')
        code --install-extension ms-azuretools.vscode-bicep
        code --install-extension ms-dotnettools.csharp
        code --install-extension ms-azuretools.vscode-azureappservice
        code --install-extension ms-dotnettools.csdevkit
      
    